#include <iostream>
#include <vector>
#include <tuple>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    // The format for this is {x coordinate, character, y coordinate}
    vector<tuple<int, char, int>> data = {
        {87,'X',3},{23,' ',2},{61,'X',4},{2,' ',1},{65,'X',4},{31,' ',5},{30,' ',6},
        {20,'X',4},{35,'X',1},{2,'X',6},{52,'X',1},{12,'X',0},{66,'X',6},{69,'X',4},
        {85,'X',0},{55,'X',6},{77,'X',3},{9,'X',0},{53,'X',6},{5,'X',3},{44,' ',3},
        {40,'X',3},{14,'X',0},{0,'X',5},{60,' ',0},{14,'X',3},{22,'X',1},{26,'X',6},
        {66,'X',2},{29,'X',5},{8,'X',0},{80,' ',5},{34,'X',5},{8,' ',3},{87,'X',1},
        {47,'X',6},{6,'X',0},{45,'X',1},{45,'X',2},{29,'X',1},{65,'X',6},{52,'X',2},
        {6,'X',3},{2,' ',4},{58,'X',0},{66,'X',1},{16,'X',0},{54,' ',3},{24,'X',6},
        {67,' ',1},{9,'X',6},{62,'X',2},{44,'X',0},{21,'X',4},{62,' ',5},{15,'X',6},
        {0,'X',0},{4,'X',0},{70,'X',2},{63,' ',4},{78,'X',1},{81,'X',0},{87,' ',0},
        {2,' ',2},{16,' ',4},{36,' ',4},{43,'X',3},{68,'X',2},{18,' ',6},{4,'X',3},
        {62,'X',3},{30,' ',0},{79,'X',1},{75,' ',6},{53,'X',4},{24,'X',0},{54,' ',2},
        {22,' ',3},{79,'X',5},{67,' ',6},{25,'X',0},{56,'X',0},{87,'X',4},{2,'X',3},
        {1,'X',0},{55,'X',0},{72,'X',1},{79,' ',4},{42,'X',3},{37,' ',2},{79,' ',2},
        {22,'X',4},{88,'X',4},{1,'X',1},{46,'X',4},{66,'X',3},{30,'X',5},{14,'X',1},
        {39,'X',3},{67,' ',2},{1,'X',5},{89,' ',1},{46,' ',0},{70,'X',1},{35,'X',3},
        {73,' ',5},{7,'X',3},{52,'X',0},{81,'X',6},{47,' ',1},{38,' ',0},{78,'X',4},
        {54,' ',4},{53,'X',5},{38,'X',1},{15,'X',5},{66,'X',4},{31,' ',1},{33,'X',6},
        {43,'X',4},{34,'X',3},{80,'X',6},{82,'X',6},{65,'X',5},{67,' ',0},{25,'X',6},
        {44,' ',2},{36,'X',2},{21,'X',2},{75,' ',0},{86,'X',0},{18,' ',0},{46,'X',3},
        {73,'X',0},{7,'X',0},{72,'X',5},{53,'X',1},{17,'X',0},{34,'X',6},{54,'X',6},
        {41,'X',4},{0,'X',4},{23,'X',5},{60,'X',1},{15,'X',2},{83,'X',6},{73,'X',6},
        {62,'X',4},{89,' ',3},{86,'X',6},{49,' ',4},{86,'X',5},{63,' ',3},{73,' ',1},
        {2,' ',5},{16,' ',5},{67,' ',4},{30,'X',1},{10,' ',0},{15,'X',1},{7,'X',6},
        {61,'X',5},{61,'X',1},{83,'X',0},{36,'X',0},{39,' ',1},{50,' ',6},{47,'X',4},
        {71,'X',5},{56,'X',6},{14,'X',4},{78,'X',3},{21,'X',5},{8,'X',6},{66,'X',5},
        {52,'X',3},{22,'X',5},{42,'X',4},{13,'X',0},{6,'X',6},{43,'X',2},{65,'X',2},
        {44,'X',1},{29,'X',0},{67,' ',5},{23,' ',4},{24,' ',1},{60,'X',5},{66,'X',0},
        {44,' ',4},{39,'X',2},{88,'X',2},{4,'X',6},{52,'X',6},{48,'X',6},{45,'X',0},
        {5,'X',0},{79,'X',6},{35,'X',5},{27,'X',6},{57,'X',6},{84,'X',0},{22,'X',2},
        {0,'X',3},{33,'X',5},{74,'X',6},{58,'X',6},{39,'X',4},{87,' ',6},{24,' ',5},
        {1,'X',3},{46,'X',2},{89,' ',5},{3,'X',3},{5,'X',6},{43,' ',5},{42,'X',2},
        {41,'X',5},{28,'X',6},{61,'X',2},{38,'X',2},{87,'X',5},{68,'X',4},{10,' ',6},
        {16,'X',6},{14,'X',5},{0,'X',6},{37,' ',3},{89,' ',2},{48,' ',3},{17,'X',6},
        {36,'X',3},{48,'X',4},{46,'X',1},{59,'X',6},{52,'X',5},{77,'X',1},{35,' ',6},
        {74,'X',0},{35,'X',2},{15,'X',3},{72,'X',0},{23,'X',0},{79,' ',3},{49,' ',5},
        {23,'X',1},{82,'X',0},{21,'X',3},{20,'X',3},{59,'X',0},{54,' ',1},{36,' ',5},
        {12,'X',6},{89,' ',4},{86,'X',1},{57,'X',0},{14,'X',2},{65,'X',0},{78,'X',2},
        {42,'X',5},{29,'X',6},{16,' ',3},{1,'X',6},{80,'X',0},{65,'X',3},{37,'X',1},
        {54,' ',5},{70,'X',4},{84,'X',6},{40,' ',2},{88,'X',3},{47,'X',3},{23,'X',6},
        {28,'X',0},{15,'X',0},{77,'X',4},{53,'X',2},{35,'X',4},{1,'X',4},{87,'X',2},
        {88,'X',1},{34,'X',4},{47,' ',2},{54,'X',0},{78,'X',5},{0,'X',1},{61,'X',3},
        {20,'X',2},{69,' ',3},{62,' ',1},{63,' ',2},{67,'X',3},{72,'X',6},{36,'X',1},
        {0,'X',2},{41,' ',3},{49,'X',6},{14,'X',6},{15,'X',4},{47,'X',5},{2,'X',0},
        {88,'X',5},{43,'X',1},{26,'X',0},{71,' ',4},{71,'X',1},{53,'X',0},{16,' ',2},
        {40,'X',5},{77,'X',5},{3,'X',0},{37,'X',0},{53,'X',3},{65,'X',1},{77,'X',2},
        {70,'X',5},{79,'X',0},{68,'X',3},{3,'X',6},{60,' ',6},{52,'X',4},{80,' ',1},
        {13,'X',6},{16,' ',1},{48,'X',5},{85,'X',6},{40,'X',4},{21,'X',1},{71,' ',2},
        {69,'X',2},{1,'X',2},{27,'X',0}
    };


    //This will determine the grid size
    int maxX = 0, maxY = 0;
    for (auto [x, c, y] : data) {
        if (x > maxX) maxX = x;
        if (y > maxY) maxY = y;
    }

    //This creates the grid
    vector<vector<char>> grid(maxY + 1, vector<char>(maxX + 1, ' '));

    //This puts the characters into the grid
    for (auto [x, c, y] : data)
        grid[y][x] = c;

    //This prints the grid
    for (int y = 0; y <= maxY; y++) {
        for (int x = 0; x <= maxX; x++)
            cout << grid[y][x];
        cout << '\n';
    }

    return 0;
}
